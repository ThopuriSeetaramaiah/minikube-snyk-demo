apiVersion: apps/v1
kind: Deployment
metadata:
  name: fully-secure-nginx-deployment
  labels:
    app: fully-secure-nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fully-secure-nginx
  template:
    metadata:
      labels:
        app: fully-secure-nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.28.0-alpine  # Using a more secure Alpine-based image
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "0.5"
            memory: "256Mi"
          requests:
            cpu: "0.2"
            memory: "128Mi"
        securityContext:
          runAsNonRoot: true
          runAsUser: 10000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
        imagePullPolicy: Always
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: var-run-volume
          mountPath: /var/run
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: var-run-volume
        emptyDir: {}
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-conf
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: fully-secure-nginx-service
spec:
  selector:
    app: fully-secure-nginx
  ports:
  - port: 80
    targetPort: 80
  type: NodePort
